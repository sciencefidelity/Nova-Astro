<?xml version="1.0" encoding="UTF-8"?>
<syntax name="astro">
    <meta>
        <name>Astro</name>
        <type>script</type>
        <preferred-file-extension>astro</preferred-file-extension>
    </meta>

    <detectors>
        <extension priority="1.0">astro</extension>
    </detectors>

    <indentation>
        <increase>
            <expression>(?x)
                (\{[^}\"']*$)|(\[[^\]\"']*$)|(\([^)\"']*$)
                |(&lt;(?!\?|(?:area|base|br|col|embed|hr|img|input|link|meta|param|source|track|wbr)\b)([-_\.A-Za-z0-9]+)(?=\s|&gt;)\b[^&gt;]*&gt;[^&lt;]*$)
                |(&lt;!--\s*$)
            </expression>
        </increase>
        <decrease>
            <expression>^\s*(\s*/\*.*\*/\s*)*[\}\]\)\\]</expression>
        </decrease>
    </indentation>

    <comments>
        <multiline>
            <starts-with>
                <expression>&lt;!--</expression>
            </starts-with>
            <ends-with>
                <expression>--&gt;</expression>
            </ends-with>
        </multiline>
    </comments>

    <brackets>
        <pair open="{" close="}" />
        <pair open="[" close="]" />
        <pair open="(" close=")" />
    </brackets>

    <surrounding-pairs>
        <pair open="{" close="}" />
        <pair open="[" close="]" />
        <pair open="(" close=")" />
        <pair open="&apos;" close="&apos;" />
        <pair open="&quot;" close="&quot;" />
        <pair open="`" close="`" />
        <pair open="“" close="”" />
        <pair open="‘" close="’" />
    </surrounding-pairs>

    <!-- Completions -->

    <scopes>
        <include syntax="self" collection="entities" />
        <include syntax="self" collection="frontmatter" />
        <include syntax="self" collection="tags" />
        <include syntax="typescript" collection="*" />
    </scopes>

    <collections>

        <!-- Entities -->
        <collection name="entities">
            <scope name="astro.value.entity.numeric" spell-check="false" lookup="documentation">
                <expression>&amp;\#[0-9]+;</expression>
            </scope>
            <scope name="xml.value.entity.named">
                <strings prefix="&amp;" suffix=";" word-boundary="false">
                    <string>amp</string>
                    <string>lt</string>
                    <string>gt</string>
                    <string>apos</string>
                    <string>quot</string>
                </strings>
            </scope>
        </collection>

        <!-- Comments -->
        <collection name="comments">
            <scope name="astro.comment.block" spell-check="true">
                <starts-with>
                    <expression>&lt;!--</expression>
                </starts-with>
                <ends-with>
                    <expression>--&gt;</expression>
                </ends-with>
            </scope>
        </collection>

        <!-- Frontmatter -->
        <collection name="frontmatter">
            <scope name="astro.block.frontmatter">
                <symbol type="tag">
                    <display-name>
                        <component variable="frontmatter" />
                    </display-name>
                    <context behavior="subtree">
                        <auto-close string="---" completion="---" />
                    </context>
                </symbol>
                <starts-with>
                    <expression>\A(-{3})\s*$</expression>
                    <capture number="1" name="astro.comment.block" />
                </starts-with>
                <ends-with>
                    <expression>(^|\G)(-{3})|\.{3}\s*$</expression>
                    <capture number="2" name="astro.comment.block" />
                </ends-with>
                <subsyntax name="typescript">
                    <cut-off>
                        <expression>(^|\G)(-{3})|\.{3}\s*$</expression>
                    </cut-off>
                </subsyntax>
            </scope>
        </collection>

        <!-- Syntax -->
        <collection name="syntax" override="true">
            <include syntax="self" collection="tags" />
            <include syntax="typescript" collection="syntax" />
        </collection>

        <!-- Tags -->
        <collection name="tags">

            <!-- Tag Blocks (<> … </>) -->

            <!-- Void elements (self-closing tags) -->
            <scope name="astro.tag.open.void">
                <symbol type="tag">
                    <context behavior="subtree" group-by-name="true" unclosed="truncate" />
                </symbol>
                <starts-with>
                    <strings prefix="(?&lt;![a-zA-Z0-9_])&lt;" suffix="\b" word-boundary="false">
                        <string>area</string>
                        <string>base</string>
                        <string>br</string>
                        <string>col</string>
                        <string>command</string>
                        <string>embed</string>
                        <string>hr</string>
                        <string>input</string>
                        <string>img</string>
                        <string>keygen</string>
                        <string>link</string>
                        <string>meta</string>
                        <string>param</string>
                        <string>source</string>
                        <string>track</string>
                        <string>wbr</string>
                    </strings>
                    <capture number="1" name="astro.tag.name" />
                </starts-with>
                <ends-with>
                    <expression>/?&gt;</expression>
                </ends-with>
                <subscopes>
                    <include syntax="self" collection="attributes" />
                </subscopes>
            </scope>

            <!-- SASS -->
            <scope name="astro.embedded.style" spell-check="false" lookup="documentation">
                <starts-with>
                    <expression>(?=&lt;(?i:style)\b)(?=[^&gt;]*lang=('sass'|\"sass\"))(?![^/&gt;]*/&gt;\s*$)</expression>
                </starts-with>
                <ends-with />
                <subscopes anchored="true" skip-whitespace="false">
                    <scope name="astro.tag.style.open">
                        <symbol type="tag-style">
                            <context behavior="start" group-by-name="true">
                                <auto-close string="&lt;/" completion="${name}&gt;" />
                            </context>
                        </symbol>
                        <starts-with>
                            <expression>&lt;((?i:style))</expression>
                            <capture number="1" name="astro.tag.name" />
                        </starts-with>
                        <ends-with>
                            <expression>/?&gt;</expression>
                        </ends-with>
                        <subscopes>
                            <include syntax="self" collection="attributes" />
                        </subscopes>
                    </scope>
                    <scope name="astro.embedded.style.content" optional="true">
                        <starts-with>
                           <expression>(?&lt;=&gt;)</expression>
                        </starts-with>
                        <ends-with>
                           <expression>(?=&lt;/(?i:style)\b)</expression>
                        </ends-with>
                        <subsyntax name="sass">
                            <cut-off>
                                <expression>(?=&lt;/(?i:style)\b)</expression>
                            </cut-off>
                        </subsyntax>
                    </scope>
                </subscopes>
            </scope>

            <!-- SCSS -->
            <scope name="astro.embedded.style" spell-check="false" lookup="documentation">
                <starts-with>
                    <expression>(?=&lt;(?i:style)\b)(?=[^&gt;]*lang=('scss'|\"scss\"))(?![^/&gt;]*/&gt;\s*$)</expression>
                </starts-with>
                <ends-with />
                <subscopes anchored="true" skip-whitespace="false">
                    <scope name="astro.tag.style.open">
                        <symbol type="tag-style">
                            <context behavior="start" group-by-name="true">
                                <auto-close string="&lt;/" completion="${name}&gt;" />
                            </context>
                        </symbol>
                        <starts-with>
                            <expression>&lt;((?i:style))</expression>
                            <capture number="1" name="astro.tag.name" />
                        </starts-with>
                        <ends-with>
                            <expression>/?&gt;</expression>
                        </ends-with>
                        <subscopes>
                            <include syntax="self" collection="attributes" />
                        </subscopes>
                    </scope>
                    <scope name="astro.embedded.style.content" optional="true">
                        <starts-with>
                            <expression>(?&lt;=&gt;)</expression>
                        </starts-with>
                        <ends-with>
                            <expression>(?=&lt;/(?i:style)\b)</expression>
                        </ends-with>
                        <subsyntax name="scss">
                            <cut-off>
                                <expression>(?=&lt;/(?i:style)\b)</expression>
                            </cut-off>
                        </subsyntax>
                    </scope>
                </subscopes>
            </scope>

            <!-- LESS -->
            <scope name="astro.embedded.style" spell-check="false" lookup="documentation">
                <starts-with>
                    <expression>(?=&lt;(?i:style)\b)(?=[^&gt;]*lang=('less'|\"less\"))(?![^/&gt;]*/&gt;\s*$)</expression>
                </starts-with>
                <ends-with />
                <subscopes anchored="true" skip-whitespace="false">
                    <scope name="astro.tag.style.open">
                        <symbol type="tag-style">
                            <context behavior="start" group-by-name="true">
                                <auto-close string="&lt;/" completion="${name}&gt;" />
                            </context>
                        </symbol>
                        <starts-with>
                            <expression>&lt;((?i:style))</expression>
                            <capture number="1" name="astro.tag.name" />
                        </starts-with>
                        <ends-with>
                            <expression>/?&gt;</expression>
                        </ends-with>
                        <subscopes>
                            <include syntax="self" collection="attributes" />
                        </subscopes>
                    </scope>
                    <scope name="astro.embedded.style.content" optional="true">
                        <starts-with>
                            <expression>(?&lt;=&gt;)</expression>
                        </starts-with>
                        <ends-with>
                            <expression>(?=&lt;/(?i:style)\b)</expression>
                        </ends-with>
                        <subsyntax name="less">
                            <cut-off>
                                <expression>(?=&lt;/(?i:style)\b)</expression>
                            </cut-off>
                        </subsyntax>
                    </scope>
                </subscopes>
            </scope>

            <!-- CSS -->
            <scope name="astro.embedded.style" spell-check="false" lookup="documentation">
                <starts-with>
                    <expression>(?=&lt;(?i:style)\b)</expression>
                </starts-with>
                <ends-with />
                <subscopes anchored="true" skip-whitespace="false">
                    <scope name="astro.tag.style.open">
                        <symbol type="tag-style">
                            <context behavior="start" group-by-name="true">
                                <auto-close string="&lt;/" completion="${name}&gt;" />
                            </context>
                        </symbol>
                        <starts-with>
                            <expression>&lt;((?i:style))</expression>
                            <capture number="1" name="astro.tag.name" />
                        </starts-with>
                        <ends-with>
                            <expression>/?&gt;</expression>
                        </ends-with>
                        <subscopes>
                            <include syntax="self" collection="attributes" />
                        </subscopes>
                    </scope>
                    <scope name="astro.embedded.style.content" optional="true">
                        <starts-with>
                            <expression>(?&lt;=&gt;)</expression>
                        </starts-with>
                        <ends-with>
                            <expression>(?=&lt;/(?i:style)\b)</expression>
                        </ends-with>
                        <subsyntax name="css">
                            <cut-off>
                                <expression>(?=&lt;/(?i:style)\b)</expression>
                            </cut-off>
                        </subsyntax>
                    </scope>
                </subscopes>
            </scope>

            <!-- !Script -->
            <scope name="astro.embedded.script" spell-check="false" lookup="documentation">
                <starts-with>
                    <expression>(?=&lt;(?i:script)\b)</expression>
                </starts-with>
                <ends-with />
                <subscopes anchored="true" skip-whitespace="false">
                    <scope name="astro.tag.script.open">
                        <symbol type="tag-script">
                            <context behavior="start" group-by-name="true">
                                <auto-close string="&lt;/" completion="${name}&gt;" />
                            </context>
                        </symbol>
                        <starts-with>
                            <expression>&lt;((?i:script))</expression>
                            <capture number="1" name="astro.tag.name" />
                        </starts-with>
                        <ends-with>
                            <expression>/?&gt;</expression>
                        </ends-with>
                        <subscopes>
                            <include syntax="self" collection="attributes" />
                        </subscopes>
                    </scope>
                    <scope name="astro.embedded.script.content" optional="true">
                        <starts-with>
                            <expression>(?&lt;=&gt;)</expression>
                        </starts-with>
                        <ends-with>
                            <expression>(?=&lt;/(?i:script)\b)</expression>
                        </ends-with>
                        <subsyntax name="typescript">
                            <cut-off>
                                <expression>(?=&lt;/(?i:script)\b)</expression>
                            </cut-off>
                        </subsyntax>
                    </scope>
                </subscopes>
            </scope>



            <!-- <FrameworkComponent>...</FrameworkComponent> -->
            <scope name="astro.tag-definition.framework.component">
                <symbol type="tag">
                    <display-name>
                        <component variable="name" />
                        <component selector="tag.attribute.value.id" prepend="#" />
                        <component selector="tag.attribute.value.class" prepend="." replace="\s+" replace-with="." />
                    </display-name>
                    <context behavior="subtree">
                        <auto-close string="&lt;/" completion="${name}&gt;" />
                    </context>
                </symbol>
                <starts-with>
                    <expression>(?&lt;![a-zA-Z0-9_])(&lt;)\s*((?:(?:[a-zA-Z_][a-zA-Z0-9_-]*)(?:\.[a-zA-Z_][a-zA-Z0-9-_]*))|(?:[A-Z][a-zA-Z0-9_-]*))</expression>
                    <capture number="1" name="astro.tag.open.framework" />
                    <capture number="2" name="astro.tag.open.name.framework" />
                </starts-with>
                <ends-with>
                    <template>&lt;/\s*($2)\s*&gt;|/&gt;</template>
                    <capture number="0" name="astro.tag.close.framework" />
                    <capture number="1" name="astro.tag.close.framework.name" />
                </ends-with>
                <subscopes anchored="true">
                    <include syntax="self" collection="framework-attributes" optional="true" repeat="true" />
                    <cut-off>
                        <expression>/&gt;</expression>
                        <capture number="0" name="astro.tag.close.framework" />
                    </cut-off>
                    <scope name="astro.tag.open.framework">
                        <expression>&gt;</expression>
                    </scope>
                    <include syntax="self" collection="tag-content" optional="true" repeat="true" />
                </subscopes>
            </scope>

            <!-- <domelement> -->
            <scope name="astro.tag-definition.dom">
                <symbol type="tag">
                    <display-name>
                        <component variable="name" />
                        <component selector="tag.attribute.value.id" prepend="#" />
                        <component selector="tag.attribute.value.class" prepend="." replace="\s+" replace-with="." />
                    </display-name>
                    <context behavior="subtree">
                        <auto-close string="&lt;/" completion="${name}&gt;" />
                    </context>
                </symbol>
                <starts-with>
                    <expression>(?&lt;![a-zA-Z0-9_])(&lt;)([a-zA-Z_][a-zA-Z0-9_:.-]*)</expression>
                    <capture number="1" name="astro.tag.open" />
                    <capture number="2" name="astro.tag.open.name" />
                </starts-with>
                <ends-with>
                    <expression>&lt;/\s*($2)\s*&gt;|/&gt;</expression>
                    <capture number="0" name="astro.tag.close" />
                    <capture number="1" name="astro.tag.close.name" />
                </ends-with>
                <subscopes anchored="true">
                    <include syntax="self" collection="attributes" optional="true" repeat="true" />
                    <cut-off>
                        <expression>/&gt;</expression>
                        <capture number="0" name="astro.tag.close.framework" />
                    </cut-off>
                    <scope name="astro.tag.open">
                        <expression>&gt;</expression>
                    </scope>
                    <include syntax="self" collection="tag-content" optional="true" repeat="true" />
                </subscopes>
            </scope>

        </collection>

        <!-- Tag Attributes -->
        <collection name="attributes">
            <include syntax="self" collection="comments" />
            <include syntax="self" collection="variables" />
            <scope name="astro.tag-attribute-definition">
                <starts-with>
                    <expression>\b([a-zA-Z_][a-zA-Z0-9-_]*)\b</expression>
                    <capture number="1" name="astro.tag.attribute.name" />
                </starts-with>
                <ends-with />
                <subscopes anchored="true">
                    <scope name="astro.tag.attribute.operator">
                        <expression>=</expression>
                    </scope>
                    <include syntax="self" collection="attribute-values" />
                </subscopes>
            </scope>
            <include syntax="self" collection="attribute-values" />
        </collection>

        <!-- Framework Tag Attributes -->
        <collection name="framework-attributes">
            <include syntax="self" collection="comments" />
            <include syntax="self" collection="variables" />
            <scope name="jsx.framework.tag-attribute-definition">
                <starts-with>
                    <expression>\b([a-zA-Z_][a-zA-Z0-9-_]*)\b</expression>
                    <capture number="1" name="jsx.framework.tag.attribute.name" />
                </starts-with>
                <ends-with />
                <subscopes anchored="true">
                    <scope name="jsx.tag.framework.attribute.operator">
                        <expression>=</expression>
                    </scope>
                    <include syntax="self" collection="attribute-values" />
                </subscopes>
            </scope>
            <include syntax="self" collection="attribute-values" />
        </collection>

        <!-- Tag Content -->
        <collection name="tag-content">
            <include syntax="self" collection="comments" />
            <include syntax="self" collection="variables" />
            <include syntax="self" collection="tags" />
            <include syntax="self" collection="markdown" />
            <scope name="astro.tag-content.bare-words">
                <expression>(?:[^&lt;{\s]+)</expression>
            </scope>
            <scope name="astro.tag.close.framework">
                <!-- </ReactComponent> -->
                <expression>&lt;/\s*((?:(?:[a-zA-Z_][a-zA-Z0-9_-]*)(?:\.[a-zA-Z_][a-zA-Z0-9-_]*))|(?:[A-Z][a-zA-Z0-9_-]*))\s*&gt;</expression>
                <capture number="1" name="astro.tag.name.framework" />
            </scope>
            <scope name="astro.tag.close">
                <!-- </domelement> -->
                <expression>&lt;/\s*([a-zA-Z_][a-zA-Z0-9_:-]*)\s*&gt;</expression>
                <capture number="1" name="astro.tag.name" />
            </scope>
        </collection>

        <!-- Variables -->
        <collection name="variables">
            <scope name="astro.value.variable">
                <symbol type="block">
                    <context behavior="subtree" />
                </symbol>
                <starts-with>
                    <expression>\{</expression>
                    <capture number="0" name="astro.value.variable.bracket" />
                </starts-with>
                <ends-with>
                    <expression>\}</expression>
                    <capture number="0" name="astro.value.variable.bracket" />
                </ends-with>
                <subscopes>
                    <cut-off>
                        <!-- Cut off if a JavaScript expression keyword is encountered -->
                        <expression>(?=\b(?:var|function|class|if|else|for|while)\b)</expression>
                    </cut-off>
                    <include syntax="typescript" collection="keywords" />
                    <include syntax="typescript" collection="blocks" />
                    <include syntax="typescript" collection="values" />
                    <include syntax="typescript" collection="identifiers" />
                    <include syntax="self" collection="syntax" />
                </subscopes>
            </scope>
        </collection>

        <!-- Attribute values -->
        <collection name="attribute-values">
            <scope name="astro.tag.attribute.value.double-quoted">
                <starts-with>
                    <expression>&quot;</expression>
                </starts-with>
                <ends-with>
                    <expression>&quot;</expression>
                </ends-with>
                <subscopes>
                    <scope name="astro.tag.attribute.value.escape">
                        <expression>\\\\|\\\\{|\\&quot;</expression>
                    </scope>
                    <include syntax="self" collection="variables" />
                </subscopes>
            </scope>
            <scope name="astro.tag.attribute.value.single-quoted">
                <starts-with>
                    <expression>&apos;</expression>
                </starts-with>
                <ends-with>
                    <expression>&apos;</expression>
                </ends-with>
                <subscopes>
                    <scope name="astro.tag.attribute.value.escape">
                        <expression>\\\\|\\\\{|\\&apos;</expression>
                    </scope>
                    <include syntax="self" collection="variables" />
                </subscopes>
            </scope>
            <include syntax="self" collection="variables" />
            <scope name="astro.tag.attribute.value.bare">
                <expression>\b[a-zA-Z0-9-_]+\b</expression>
            </scope>
        </collection>

        <!-- Markdown -->
        <collection name="markdown">
            <include syntax="self" collection="blocks" />
            <include syntax="self" collection="spans" />
        </collection>

        <!-- Blocks -->
        <collection name="blocks">
            <scope name="astro.markup.heading.h1">
                <symbol type="heading">
                    <context behavior="next" group="h1" priority="100" />
                </symbol>
                <starts-with>
                    <expression>\#\s+</expression>
                </starts-with>
                <ends-with>
                    <expression>$</expression>
                </ends-with>
                <subscopes>
                    <scope name="astro.markup.heading.h1.name">
                        <starts-with>
                            <expression>(?!$)</expression>
                        </starts-with>
                        <ends-with>
                            <expression>(?=$)</expression>
                        </ends-with>
                        <subscopes>
                            <include syntax="self" collection="spans" />
                        </subscopes>
                    </scope>
                </subscopes>
            </scope>
            <scope name="astro.markup.heading.h2">
                <symbol type="heading">
                    <context behavior="next" group="h2" priority="90" />
                </symbol>
                <starts-with>
                    <expression>\#\#\s+</expression>
                </starts-with>
                <ends-with>
                    <expression>$</expression>
                </ends-with>
                <subscopes>
                    <scope name="astro.markup.heading.h2.name">
                        <starts-with>
                            <expression>(?!$)</expression>
                        </starts-with>
                        <ends-with>
                            <expression>(?=$)</expression>
                        </ends-with>
                        <subscopes>
                            <include syntax="self" collection="spans" />
                        </subscopes>
                    </scope>
                </subscopes>
            </scope>
            <scope name="astro.markup.heading.h3">
                <symbol type="heading">
                    <context behavior="next" group="h3" priority="80" />
                </symbol>
                <starts-with>
                    <expression>\#\#\#\s+</expression>
                </starts-with>
                <ends-with>
                    <expression>$</expression>
                </ends-with>
                <subscopes>
                    <scope name="astro.markup.heading.h3.name">
                        <starts-with>
                            <expression>(?!$)</expression>
                        </starts-with>
                        <ends-with>
                            <expression>(?=$)</expression>
                        </ends-with>
                        <subscopes>
                            <include syntax="self" collection="spans" />
                        </subscopes>
                    </scope>
                </subscopes>
            </scope>
            <scope name="astro.markup.heading.h4">
                <symbol type="heading">
                    <context behavior="next" group="h4" priority="70" />
                </symbol>
                <starts-with>
                    <expression>\#\#\#\#\s+</expression>
                </starts-with>
                <ends-with>
                    <expression>$</expression>
                </ends-with>
                <subscopes>
                    <scope name="astro.markup.heading.h4.name">
                        <starts-with>
                            <expression>(?!$)</expression>
                        </starts-with>
                        <ends-with>
                            <expression>(?=$)</expression>
                        </ends-with>
                        <subscopes>
                            <include syntax="self" collection="spans" />
                        </subscopes>
                    </scope>
                </subscopes>
            </scope>
            <scope name="astro.markup.heading.h5">
                <symbol type="heading">
                    <context behavior="next" group="h5" priority="60" />
                </symbol>
                <starts-with>
                    <expression>\#\#\#\#\#\s+</expression>
                </starts-with>
                <ends-with>
                    <expression>$</expression>
                </ends-with>
                <subscopes>
                    <scope name="astro.markup.heading.h5.name">
                        <starts-with>
                            <expression>(?!$)</expression>
                        </starts-with>
                        <ends-with>
                            <expression>(?=$)</expression>
                        </ends-with>
                        <subscopes>
                            <include syntax="self" collection="spans" />
                        </subscopes>
                    </scope>
                </subscopes>
            </scope>
            <scope name="astro.markup.heading.h6">
                <symbol type="heading">
                    <context behavior="next" group="h6" priority="50" />
                </symbol>
                <starts-with>
                    <expression>\#\#\#\#\#\#\s+</expression>
                </starts-with>
                <ends-with>
                    <expression>$</expression>
                </ends-with>
                <subscopes>
                    <scope name="astro.markup.heading.h6.name">
                        <starts-with>
                            <expression>(?!$)</expression>
                        </starts-with>
                        <ends-with>
                            <expression>(?=$)</expression>
                        </ends-with>
                        <subscopes>
                            <include syntax="self" collection="spans" />
                        </subscopes>
                    </scope>
                </subscopes>
            </scope>
            <scope name="astro.markup.line">
                <expression>(?:(?:=+)|(?:-+))\s*$</expression>
            </scope>
            <scope name="astro.markup.block.quote">
                <expression>^&gt;</expression>
            </scope>
            <scope name="astro.markup.list.unordered">
                <starts-with>
                    <expression>\s*(\*|-|\+)\s+</expression>
                    <capture number="1" name="astro.markup.list.item.unordered" />
                </starts-with>
                <ends-with>
                    <expression>$</expression>
                </ends-with>
                <subscopes>
                    <include syntax="self" collection="astro-spans" />
                </subscopes>
            </scope>
            <scope name="astro.markup.list.ordered">
                <starts-with>
                    <expression>\s*(\d+\.)\s+</expression>
                    <capture number="1" name="astro.markup.list.item.ordered" />
                </starts-with>
                <ends-with>
                    <expression>$</expression>
                </ends-with>
                <subscopes>
                    <include syntax="self" collection="spans" />
                    <include syntax="html" collection="*" />
                </subscopes>
            </scope>
            <scope name="astro.markup.block.code" spell-check="false">
                <expression>(\t|\040{4})+.*$</expression>
            </scope>

            <include syntax="self" collection="code-blocks" />

            <scope name="astro.markup.reference" spell-check="false">
                <symbol type="reference" />
                <starts-with>
                    <expression>\s*\[([a-zA-Z0-9-_]*)\](\:)</expression>
                    <capture number="1" name="astro.link.identifier.name.key" />
                    <capture number="2" name="astro.bracket" />
                </starts-with>
                <ends-with>
                    <expression>$</expression>
                </ends-with>
                <subscopes>
                    <include syntax="self" collection="strings" />
                </subscopes>
            </scope>
        </collection>

        <collection name="code-blocks">
            <scope name="astro.markup.block.code.language" spell-check="false">
                <starts-with>
                    <expression>\s*(```)([a-zA-Z_][a-zA-Z0-9_+\-]*)\b</expression>
                    <capture number="1" name="astro.markup.bracket" />
                    <capture number="2" name="astro.markup.block.code.langauge.name" />
                </starts-with>
                <ends-with>
                    <expression>\s*(```)</expression>
                    <capture number="1" name="astro.markup.bracket" />
                </ends-with>
                <subsyntax capture="2">
                    <alias key="js" value="javascript" />
                    <alias key="ts" value="typescript" />
                    <alias key="py" value="python" />
                    <alias key="python2" value="python" />
                    <alias key="python3" value="python" />
                    <alias key="rb" value="ruby" />
                    <alias key="sh" value="shell" />
                    <cut-off>
                        <expression>(?=```)</expression>
                    </cut-off>
                </subsyntax>
            </scope>
            <scope name="astro.markup.block.code.plain" spell-check="false">
                <starts-with>
                    <expression>\s*(```)</expression>
                    <capture number="1" name="astro.markup.bracket" />
                </starts-with>
                <ends-with>
                    <expression>\s*(```)</expression>
                    <capture number="1" name="astro.markup.bracket" />
                </ends-with>
            </scope>
        </collection>

        <!-- Strings -->
        <collection name="strings">
            <scope name="astro.string.double-quoted">
                <expression>(?:\b(b|r|u))?&quot;((?:[^&quot;\\]|\\.)*)(?:&quot;|$)</expression>
                <capture number="1" name="astro.string.double-quoted.prefix" />
                <capture number="2" name="astro.string.double-quoted.text" />
            </scope>
            <scope name="astro.string.single-quoted">
                <expression>(?:\b(b|r|u))?&apos;((?:[^&apos;\\]|\\.)*)(?:&apos;|$)</expression>
                <capture number="1" name="astro.string.single-quoted.prefix" />
                <capture number="2" name="astro.string.single-quoted.text" />
            </scope>
        </collection>

        <!-- Markdown Spans -->
        <collection name="spans">
            <scope name="astro.markup.bold.asterisk">
                <expression>(?:\*\*(?!\s).+?(?!\s)\*\*)</expression>
            </scope>
            <scope name="astro.markup.bold.underscore">
                <expression>(?&lt;![a-zA-Z0-9-_])(?:__(?!\s).+?(?!\s)__)(?![a-zA-Z0-9-_])</expression>
            </scope>
            <scope name="astro.markup.italic.asterisk">
                <expression>(?:\*(?!\s).+?(?!\s)\*)</expression>
            </scope>
            <scope name="astro.markup.italic.underscore">
                <expression>(?&lt;![a-zA-Z0-9-_])(?:_(?!\s).+?(?!\s)_)(?![a-zA-Z0-9-_])</expression>
            </scope>
            <scope name="astro.markup.strikethrough">
                <expression>(?&lt;![a-zA-Z0-9-_])(?:~~(?!\s).+?(?!\s)~~)(?![a-zA-Z0-9-_])</expression>
            </scope>
            <scope name="astro.markup.image-reference" spell-check="false">
                <expression>(!\[)((?:[^\[\]\\]|\\.)*)(\])(\[)(.*?)(\])</expression>
                <capture number="1" name="astro.image.bracket" />
                <capture number="2" name="astro.image.markup.link" />
                <capture number="3" name="astro.image.bracket" />
                <capture number="4" name="astro.image.bracket" />
                <capture number="5" name="astro.image.string" />
                <capture number="6" name="astro.image.bracket" />
            </scope>
            <scope name="astro.markup.image-inline" spell-check="false">
                <expression>(!\[)((?:[^\[\]\\]|\\.)*)(\])(?:(\()(.*?)(\)))?</expression>
                <capture number="1" name="astro.image.bracket" />
                <capture number="2" name="astro.image.markup.link" />
                <capture number="3" name="astro.image.bracket" />
                <capture number="4" name="astro.image.bracket" />
                <capture number="5" name="astro.image.string" />
                <capture number="6" name="astro.image.bracket" />
            </scope>
            <scope name="astro.markup.link-reference" spell-check="false">
                <expression>(\[)((?:[^\[\]\\]|\\.)*)(\])(\[)(.*?)(\])</expression>
                <capture number="1" name="astro.image.bracket" />
                <capture number="2" name="astro.image.markup.link" />
                <capture number="3" name="astro.image.bracket" />
                <capture number="4" name="astro.image.bracket" />
                <capture number="5" name="astro.image.string" />
                <capture number="6" name="astro.image.bracket" />
            </scope>
            <scope name="astro.markup.link-inline" spell-check="false">
                <expression>(\[)((?:[^\[\]\\]|\\.)*)(\])(?:(\()(.*?)(\)))?</expression>
                <capture number="1" name="astro.image.bracket" />
                <capture number="2" name="astro.image.markup.link" />
                <capture number="3" name="astro.image.bracket" />
                <capture number="4" name="astro.image.bracket" />
                <capture number="5" name="astro.image.string" />
                <capture number="6" name="astro.image.bracket" />
            </scope>
            <scope name="astro.markup.inline.code" spell-check="false" lookup="dictionary">
                <expression>`.*?`</expression>
            </scope>
        </collection>
    </collections>
</syntax>
